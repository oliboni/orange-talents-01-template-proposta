#DB
#spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
#spring.datasource.url=jdbc:mysql://localhost:3306/templateProposta?createDatabaseIfNotExist=true
#spring.datasource.username=root
#spring.datasource.password=bootcamp

#spring.jpa.hibernate.ddl-auto=update
#spring.jpa.show-sql=true
#spring.jpa.properties.hibernate.format_sql=true

# Datasource
spring.datasource.platform=postgresql
spring.datasource.url=jdbc:postgresql://${DB_HOST:localhost}:${DB_PORT:5432}/propostasCartoes?createDatabaseIfNotExist=true&useSSL=false
spring.datasource.username=${DATABASE_USERNAME:keycloak}
spring.datasource.password=${DATABASE_PASSWORD:password}

# JPA
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.hibernate.naming-strategy=org.hibernate.cfg.ImprovedNamingStrategy
spring.jpa.properties.javax.persistence.query.timeout = 50

#feign
feign.urlSolicitacaoAnalise = ${ANALISE_HOST:http://localhost:9999/api/solicitacao}
feign.urlCartao = ${ACCOUNT_HOST:http://localhost:8888/api/cartoes}

#sheduled
proposta.consultaCartao=5000

#Actuator
management.endpoint.health.show-details=always
management.endpoints.web.exposure.include=info,health,prometheus, metrics
management.endpoints.prometheus.enabled=true

#Prometheus
management.metrics.tags.aplicacao=${NOME_DA_APLICACAO:servico de proposta}
management.metrics.tags.ambiente=${AMBIENTE:desenvolvimento}

## spring security resource server configuration
spring.security.oauth2.resourceserver.jwt.jwk-set-uri= http://${KEYCLOAK_JWKS_URI:localhost:18080}/auth/realms/propostas/protocol/openid-connect/certs

# Jaeger - Habilita ou nao
opentracing.jaeger.enabled=${JAEGER_ENABLED:true}
# Jaeger - Nome do servico
opentracing.jaeger.service-name=${spring.application.name:propostas-api}
# Jaeger - Endereco para enviar os metadados (trace, span, etc)
opentracing.jaeger.http-sender.url=${JAEGER_ENDPOINT:http://localhost:14268/api/traces}
# Jaeger - Tipo de amostragem (probabilistico) e sua configuracao (1 = 100%)
opentracing.jaeger.probabilistic-sampler.sampling-rate=${JAEGER_SAMPLER:1}
# True para enviar 100%
opentracing.jaeger.const-sampler.decision=${JAEGER_SAMPLER:true}

#Encryptors
encryptor.secretKey=${SECRECKEY:7b75bd4c861ceb8a8a85abba32a25727}
encryptor.salt=${SALT:d1db5c7aa26bc9b07fdf93ae6401ef50}
